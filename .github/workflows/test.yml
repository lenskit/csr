name: Test and Publish
on:
  push:
    branches:
      - main
      - series/*
  release:
    types: [published]
  pull_request:

concurrency:
  group: test-${{github.ref}}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  test-conda:
    name: Test with Conda Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
        - macos
        - windows
        - ubuntu
        python:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Create Conda environment file
      run: |
        ct_opts="-p $PYVER -e test"
        ct_args="pyproject.toml"
        plat=$(uname -m)
        if [ "$plat" != arm64 ]; then
          ct_opts="$ct_opts -e dev -e mkl"
          ct_args="$ct_args mkl-devel.yml"
        fi
        pipx run ./utils/conda-tool.py --env -o environment.yml $ct_opts $ct_args
      env:
        PYVER: ${{matrix.python}}

    - name: ðŸ‘¢ Set up Conda environment
      uses: mamba-org/setup-micromamba@v1
      id: setup
      with:
        environment-file: environment.yml
        environment-name: csr
        init-shell: bash

    - name: ðŸ”Ž Inspect environment
      run: |
        numba -s

    - name: ðŸ›  Compile MKL helper
      if: matrix.platform != 'macos'
      run: |
        invoke build-mkl

    - name: Run tests
      run: |
        python -m pytest --cov=csr -v

    - name: Run tests without JIT
      run: |
        python -m pytest --cov=csr --cov-append --log-file=test-nojit.log --hypothesis-profile=nojit
      env:
        NUMBA_DISABLE_JIT: 1

    - name: Aggregate coverage data
      run: coverage xml

    - name: Save test results
      uses: lenskit/lkbuild/actions/save-test-results@main
      with:
        artifact-name: test-conda-${{matrix.platform}}-py${{matrix.python}}

  test-vanilla:
    name: Test w/ Vanilla Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        platform:
        - windows
        - ubuntu
    steps:
      - name: Check out source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python and environment
        uses: lenskit/lkbuild/actions/setup-vanilla-env@main
        with:
          python-version: ${{matrix.python}}

      - name: ðŸ”Ž Inspect environment
        run: |
          numba -s

      - name: Run tests
        run: |
          python -m pytest --cov=csr --cov-report=xml --log-file=test.log

      - name: Save test results
        uses: lenskit/lkbuild/actions/save-test-results@main
        with:
          artifact-name: test-vanilla-${{matrix.platform}}-py${{matrix.python}}

  test-mindeps:
    name: Test w/ Oldest Deps
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python and environment
        uses: lenskit/lkbuild/actions/setup-vanilla-env@main
        with:
          python-version: "3.8"
          include-dev-dependencies: false
          extras: test
          constraints-file: min-constraints.txt

      - name: ðŸ”Ž Inspect environment
        run: |
          numba -s

      - name: Run tests
        run: |
          python -m pytest --cov=csr --cov-report=xml --log-file=test.log

      - name: Run tests without JIT
        run: |
          python -m pytest --cov=csr --cov-append --log-file=test-nojit.log --hypothesis-profile=nojit
        env:
          NUMBA_DISABLE_JIT: 1

      - name: Save test results
        uses: lenskit/lkbuild/actions/save-test-results@main
        with:
          artifact-name: test-mindeps


  process-tests:
    name: Process Test Results
    runs-on: ubuntu-latest
    needs: [test-conda, test-vanilla, test-mindeps]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Process test reports
      uses: lenskit/lkbuild/actions/report-test-results@main

  package:
    name: Package and Publish
    runs-on: ubuntu-latest
    needs: [process-tests]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Fetch Git tags
      run: git fetch --tags

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Python deps
      run: pip install -U flit

    - name: Build distribution
      run: flit build

    - name: Save distribution archive
      uses: actions/upload-artifact@v3
      with:
        name: pypi-pkgs
        path: dist

    - name: List dist dir
      run: ls -R dist

    - name: Publish PyPI packages
      if: github.event_name == 'release'
      run: |
        flit publish
      shell: bash
      env:
        TWINE_NON_INTERACTIVE: y
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_TOKEN }}
