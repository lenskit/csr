name: Run Tests
on:
  push:
    branches:
      - main
  release:
    types: [published]
  pull_request:

defaults:
  run:
    shell: bash -l {0}

jobs:
  test-conda:
    name: Test with Conda Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
        - macos
        - windows
        - ubuntu
        python:
        - "3.7"
        - "3.8"
        - "3.9"
        - "3.10"

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: ðŸ‘¢ Set up Conda environment
      uses: lenskit/lkbuild/actions/setup-conda-env@main
      id: setup
      with:
        activate-environment: csr
        python-version: ${{matrix.python}}
        mixin: mkl-devel.yml

    - name: ðŸ”Ž Inspect environment
      run: |
        numba -s

    - name: ðŸ›  Compile MKL helper
      run: |
        invoke build-mkl

    - name: Run tests
      run: |
        python -m pytest --cov=csr -v

    - name: Run tests without JIT
      run: |
        python -m pytest --cov=csr --cov-append --log-file=test-nojit.log --hypothesis-profile=nojit
      env:
        NUMBA_DISABLE_JIT: 1

    - name: Aggregate coverage data
      run: coverage xml

    - name: Upload logs
      uses: actions/upload-artifact@v2
      with:
        name: log-conda-${{matrix.platform}}-py${{matrix.python}}
        path: |
          test*.log
          coverage.xml
          emissions.csv

  test-vanilla:
    name: Test w/ Vanilla Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python:
        - "3.7"
        - "3.8"
        - "3.9"
        - "3.10"
        platform:
        - windows
        - ubuntu
    steps:
      - name: Check out source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python and environment
        uses: lenskit/lkbuild/actions/setup-vanilla-env@main
        with:
          python-version: ${{matrix.python}}

      - name: Run tests
        run: |
          python -m pytest --cov=csr --cov-report=xml --log-file=test.log

      - name: Aggreagate Coverage Data
        run: coverage xml

      - name: Upload logs
        uses: actions/upload-artifact@v2
        with:
          name: log-vanilla-${{matrix.platform}}-py${{matrix.python}}
          path: |
            test*.log
            coverage.xml
            emissions.csv

  sdist:
    name: Process Build & Test Results
    runs-on: ubuntu-latest
    needs: [test-conda, test-vanilla]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch Git tags
      run: git fetch --tags

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python deps
      run: pip install -U flit

    - name: Download test results
      uses: actions/download-artifact@v2
      with:
        path: test-logs

    - name: List log files
      run: ls -lR test-logs

    - name: Upload test coverage
      uses: codecov/codecov-action@v2
      with:
        directory: test-logs/

    - name: Build distribution
      run: flit build

    - name: Save distribution archive
      uses: actions/upload-artifact@v2
      with:
        name: pypi-pkgs
        path: dist

    - name: Upload all test data
      uses: actions/upload-artifact@v2
      with:
        name: test-outputs
        path: test-logs

    - name: List dist dir
      run: ls -R dist

    - name: Publish PyPI packages
      if: github.event_name == 'release'
      run: |
        flit publish
      shell: bash
      env:
        TWINE_NON_INTERACTIVE: y
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_TOKEN }}

