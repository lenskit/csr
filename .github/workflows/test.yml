name: Run Tests
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  # lint:
  #   name: Check Source Style
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0

  #   - name: Set up Python ${{matrix.python}}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.8

  #   - name: Prep Pip caching
  #     id: pip-cache
  #     run: |
  #       echo "::set-output name=dir::$(pip cache dir)"
  #     shell: bash

  #   - name: Cache Pip wheels
  #     uses: actions/cache@v1
  #     with:
  #       path: ${{ steps.pip-cache.outputs.dir }}
  #       key: py38-lint-pip-${{ hashFiles('*.egg-info/requires.txt')}}

  #   - name: Install environment
  #     run: |
  #       pip install -U flit

  #   - name: Install package
  #     run: |
  #       flit install --pth-file --extras dev

  #   - name: Run lint
  #     run: |
  #       # Flake8 problem matcher & transform regex from https://github.com/TrueBrain/actions-flake8
  #       echo "::add-matcher::.github/flake8-matcher.json"
  #       set -o pipefail
  #       flake8 |sed -r 's/: ([^W][0-9][0-9][0-9])/: error: \1/;s/: (W[0-9][0-9][0-9])/: warning: \1/'
  #       echo "::remove-matcher owner=flake8::"

  test:
    name: Test with Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    strategy:
      matrix:
        platform:
        - macos
        - windows
        - ubuntu
        python:
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        exclude:
          - platform: macos
            python: 3.9

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.python-version }}
        conda-channels: conda-forge

    - name: Locate Python
      run: |
        which python

  # sdist:
  #   name: Build Source Packages
  #   runs-on: ubuntu-latest
  #   needs: [test, lint, no-extras]

  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0

  #   - name: Fetch Git tags
  #     run: git fetch --tags

  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.8

  #   - name: Install Python deps
  #     run: pip install -U flit

  #   - name: Build distribution
  #     run: flit build

  #   - name: Save archive
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: pypi-pkgs
  #       path: dist

  #   - name: List dist dir
  #     run: ls -R dist

  #   - name: Publish PyPI packages
  #     if: github.event_name == 'release'
  #     run: |
  #       flit publish
  #     shell: bash
  #     env:
  #       TWINE_NON_INTERACTIVE: y
  #       FLIT_USERNAME: __token__
  #       FLIT_PASSWORD: ${{ secrets.TWINE_TOKEN }}
